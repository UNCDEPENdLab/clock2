
R version 4.1.0 (2021-05-18) -- "Camp Pontanezen"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(R6)
> library(tidyverse)
── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ──
✔ ggplot2 3.4.2     ✔ purrr   1.0.1
✔ tibble  3.2.1     ✔ dplyr   1.1.2
✔ tidyr   1.3.0     ✔ stringr 1.5.0
✔ readr   2.1.2     ✔ forcats 1.0.0
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
> 
> base_dir <- "~/code/clock2/code/"
> output_dir <- "~/code/clock2/simulations"
> 
> j <- as.numeric(paste0(Sys.getenv("sourcefilestart")))
> j = 1
> setwd(output_dir)
> files <- list.files(pattern = "grid_")
> df <- data.table::fread(file = files[j])
> 
> iterate_sim <- function(df, bump_prominence, ncenters, centers, values, width_sd, i, j) {
+   set.seed(df$iteration[i])
+   ncenters <- 9 # how many gaussians there are
+   mean_val <- 10 # mean reward rate
+   sd_val <- 2 # standard deviation of reward / range of rewards
+   centers <- sample(seq(0, 2*pi, by = pi/20), ncenters, replace = FALSE) # line up gaussians here
+   values <- sample(truncnorm::rtruncnorm(ncenters, a = 0, mean = mean_val, sd = sd_val))
+   width_sd <- 20 # fixed, how wide are the underlying Gaussians
+   sanity_checks = F # diagnostic plots inside simulation loop
+   ntrials = 300
+   cat(sprintf("In loop i: %d, j: %d\n", i, j), file = "run_log.txt", append=T)
+   # set up contingency
+   bump_prominence <- 10
+   bump_value <- mean_val * bump_prominence
+   bump_center <- sample(seq(0, 2*pi, by = pi/20), 1, replace = FALSE)
+   setwd(base_dir)
+   contingency <- tryCatch(vm_circle_contingency(centers = c(centers, bump_center), weights = c(values, bump_value), widths = rep(width_sd, ncenters + 1), units = "radians"),
+                           error = function(e) {
+                             print(e)
+                             save.image(file=sprintf("contingency_error_state_%d_%d.RData", i, j))
+                             return(NULL)
+                           })
+   tt <- tryCatch(troll_world$new(n_trials=ntrials, values=contingency$get_wfunc(), drift_sd=1),
+                  error = function(e) {
+                    print(e)
+                    save.image(file=sprintf("troll_world_error_state_%d_%d.RData", i, j))
+                    return(NULL)
+                  })
+   tryCatch(tt$apply_flex(high_avg = 1, high_spread = 0, low_avg = df$low_avg[i], spread_max = 100, jump_high = T),
+            error = function(e) {
+              print(e)
+              save.image(file=sprintf("flex_error_state_%d_%d.RData", i, j))
+              return(NULL)
+            })
+   tryCatch(tt$setup_erasure_blocks(disappear_clicks = 2, timeout_trials = 1, block_length = df$block_length[i]),
+            error = function(e) {
+              print(e)
+              save.image(file=sprintf("erasure_error_state_%d_%d.RData", i, j))
+              return(NULL)
+            })
+   if (!is.null(tt)) {message("Generated contingency")} else {message("Trollworld failed")}
+   # plot(tt$spread)
+   sceptic_agent <- scepticc$new(n_basis=12, n_points=200, contingency=tt)
+   sceptic_agent$alpha <- alpha <- df$alpha[i]
+   sceptic_agent$beta <- beta <- df$beta[i]
+   sceptic_agent$gamma <- gamma <- df$gamma[i]
+   sceptic_agent$epsilon_u <- epsilon_u <- df$epsilon_u[i]
+   # new seed for the agent from teh expanded set
+   set.seed(df$seed[i])
+   learning_history <- tryCatch(sceptic_agent$run_contingency(optimize = FALSE),
+                                error = function(e) {
+                                  print(e)
+                                  save.image(file=sprintf("error_state_%d_%d.RData", i, j))
+                                  return(NULL)
+                                })
+   if (!is.null(learning_history)) {message("Ran contingency")} else {message("Scepticc failed")}
+   h <- sceptic_agent$get_entropy_history()
+   spread <- tt$spread
+   d <- cbind(learning_history, h, spread)
+   d <- d %>% inner_join(tt$erasure_segments) %>% mutate(
+     u = trial_type == "erasure" & segment_shown)
+   # browser()
+   # if (sanity_checks) {
+   #   v <- tt$get_values_matrix(type = "objective")
+   #   vmax <- apply(v, 1, which.max)
+   #   plot(vmax)
+   #   ggplot(d) + geom_line( aes(x=trial, y=h*2)) + geom_point(aes(x = trial, y = choice, color = outcome)) +
+   #     scale_color_viridis_b()
+   #   ggplot(d) + geom_line( aes(x=trial, y=h*50)) + geom_point(aes(x = trial, y = tt$spread, color = outcome)) +
+   #     scale_color_viridis_b()
+   # } # for debugging only
+   r <- cor(d$h, d$u, use = "complete.obs", method = "spearman")
+   # u_sampled <- sum(d$in_segment)
+   # browser()
+   results <- as.data.frame(cbind(df[i,], r))
+   return(results)
+   # df$tt[i] <- tt # for now, don't save the actual contingency
+ }
> setwd(base_dir)
> source("von_mises_basis.R")
g++: error: -E or -x required when input is from standard input
make: *** [/ihome/crc/install/gcc-8.2.0/r/4.1.0/lib64/R/share/make/shlib.mk:10: sourceCpp_2.so] Error 1
g++ -std=gnu++11 -I"/ihome/crc/install/gcc-8.2.0/r/4.1.0/lib64/R/include" -DNDEBUG -I../inst/include -fopenmp  -I"/ihome/adombrovski/ayd1/R/x86_64-pc-linux-gnu-library/4.1/Rcpp/include" -I"/ihome/adombrovski/ayd1/R/x86_64-pc-linux-gnu-library/4.1/RcppArmadillo/include" -I"/scratch/slurm-11353756/RtmpxyPyJ0/sourceCpp-x86_64-pc-linux-gnu-1.0.10" -I/usr/local/include   -fpic  -g -O2  -c file44645289919d.cpp -o file44645289919d.o
g++ -std=gnu++11 -shared -L/ihome/crc/install/gcc-8.2.0/r/4.1.0/lib64/R/lib -L/usr/local/lib64 -o sourceCpp_2.so file44645289919d.o -fopenmp -llapack -lblas -L/usr/local/lib/gcc/current -lgfortran -lquadmath - -L/ihome/crc/install/gcc-8.2.0/r/4.1.0/lib64/R/lib -lR
Error in sourceCpp(code = code, env = env, rebuild = rebuild, cacheDir = cacheDir,  : 
  Error 1 occurred building shared library.
Calls: source ... <Anonymous> -> all_named -> <Anonymous> -> sourceCpp
In addition: Warning message:
No function found for Rcpp::export attribute at file44645289919d.cpp:8 

WARNING: The tools required to build C++ code for R were not found.

Please install GNU development tools including a C++ compiler.

Execution halted
